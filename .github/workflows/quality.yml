name: 🔍 Code Quality & Security

on:
  schedule:
    # Run every day at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [ master, main ]
    paths:
      - 'src/**'
      - 'build.gradle'
      - '.github/workflows/quality.yml'
  pull_request:
    branches: [ master, main ]
    paths:
      - 'src/**'
      - 'build.gradle'

env:
  GRADLE_OPTS: '-Dorg.gradle.daemon=false'

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  # ==========================================
  # Code Quality Analysis
  # ==========================================
  code-analysis:
    name: 📊 Code Quality Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 📦 Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: 🔍 Run SpotBugs
        run: ./gradlew spotbugsMain spotbugsTest
        continue-on-error: true

      - name: 📊 Run Checkstyle
        run: ./gradlew checkstyleMain checkstyleTest
        continue-on-error: true

      - name: 📏 Run PMD
        run: ./gradlew pmdMain pmdTest
        continue-on-error: true

      - name: 📈 Generate JaCoCo Coverage Report
        run: ./gradlew jacocoTestReport

      - name: 📤 Upload SpotBugs Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: spotbugs-reports
          path: build/reports/spotbugs/
          retention-days: 30

      - name: 📤 Upload Checkstyle Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: checkstyle-reports
          path: build/reports/checkstyle/
          retention-days: 30

      - name: 📤 Upload PMD Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pmd-reports
          path: build/reports/pmd/
          retention-days: 30

      - name: 📈 Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: build/reports/jacoco/test/jacocoTestReport.xml
          flags: unittests
          name: codecov-umbrella

  # ==========================================
  # Security Vulnerability Scan
  # ==========================================
  security-scan:
    name: 🔒 Security Vulnerability Scan
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 📦 Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: 🔍 OWASP Dependency Check
        run: ./gradlew dependencyCheckAnalyze

      - name: 🔒 Snyk Security Scan
        uses: snyk/actions/gradle@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      - name: 📤 Upload OWASP Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: owasp-dependency-check
          path: build/reports/dependency-check-report.html
          retention-days: 30

      - name: 📤 Upload Snyk Results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: snyk.sarif

  # ==========================================
  # Advanced Static Analysis
  # ==========================================
  static-analysis:
    name: 🔍 Advanced Static Analysis
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 📦 Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: 🔒 Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java

      - name: 🏗️ Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: 🔍 SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        continue-on-error: true

  # ==========================================
  # License & Dependency Analysis
  # ==========================================
  license-check:
    name: 📜 License & Dependency Analysis
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 📦 Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: 📜 Generate License Report
        run: ./gradlew generateLicenseReport

      - name: 🔍 Check for License Violations
        run: |
          # Check for GPL licenses that might conflict
          if grep -r "GPL" build/reports/dependency-license/ 2>/dev/null; then
            echo "⚠️ GPL licenses detected. Please review compatibility."
            echo "## ⚠️ License Warning" >> $GITHUB_STEP_SUMMARY
            echo "GPL licenses detected in dependencies. Please review:" >> $GITHUB_STEP_SUMMARY
            grep -r "GPL" build/reports/dependency-license/ >> $GITHUB_STEP_SUMMARY || true
          else
            echo "✅ No license conflicts detected."
            echo "## ✅ License Check" >> $GITHUB_STEP_SUMMARY
            echo "No license conflicts detected." >> $GITHUB_STEP_SUMMARY
          fi

      - name: 📤 Upload License Report
        uses: actions/upload-artifact@v4
        with:
          name: license-report
          path: build/reports/dependency-license/
          retention-days: 30

  # ==========================================
  # Performance & Memory Analysis
  # ==========================================
  performance-analysis:
    name: ⚡ Performance Analysis
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 📦 Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: 🏗️ Build for Performance Testing
        run: ./gradlew build -x test

      - name: ⚡ JMH Benchmarks
        run: ./gradlew jmh
        continue-on-error: true

      - name: 🧠 Memory Usage Analysis
        run: |
          echo "## 🧠 Memory Analysis" >> $GITHUB_STEP_SUMMARY
          echo "Analyzing JAR size and memory footprint..." >> $GITHUB_STEP_SUMMARY
          JAR_SIZE=$(du -h build/libs/*-all.jar | cut -f1)
          echo "- **JAR Size:** $JAR_SIZE" >> $GITHUB_STEP_SUMMARY
          
          # Estimate class count
          CLASS_COUNT=$(jar tf build/libs/*-all.jar | grep '\.class$' | wc -l)
          echo "- **Class Count:** $CLASS_COUNT" >> $GITHUB_STEP_SUMMARY

      - name: 📤 Upload Performance Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-reports
          path: |
            build/reports/jmh/
            build/libs/
          retention-days: 30

  # ==========================================
  # Documentation Quality Check
  # ==========================================
  docs-quality:
    name: 📚 Documentation Quality
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 📦 Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: 📖 Generate Javadoc
        run: ./gradlew javadoc

      - name: 🔍 Check Javadoc Coverage
        run: |
          echo "## 📖 Javadoc Coverage" >> $GITHUB_STEP_SUMMARY
          JAVA_FILES=$(find src/main/java -name "*.java" | wc -l)
          echo "- **Java Files:** $JAVA_FILES" >> $GITHUB_STEP_SUMMARY
          
          # Check for missing @param and @return tags
          if command -v javadoc >/dev/null 2>&1; then
            echo "- **Javadoc Generation:** ✅ Success" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Javadoc Generation:** ❌ Failed" >> $GITHUB_STEP_SUMMARY
          fi

      - name: 📝 Markdown Link Check
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-quiet-mode: 'yes'
          use-verbose-mode: 'yes'
          config-file: '.github/markdown-link-check-config.json'
        continue-on-error: true

      - name: 📤 Upload Documentation
        uses: actions/upload-artifact@v4
        with:
          name: javadoc
          path: build/docs/javadoc/
          retention-days: 30

  # ==========================================
  # Final Quality Report
  # ==========================================
  quality-report:
    name: 📊 Quality Report Summary
    runs-on: ubuntu-latest
    needs: [ code-analysis, security-scan, static-analysis, license-check ]
    if: always()

    steps:
      - name: 📊 Generate Quality Summary
        run: |
          echo "# 🔍 Code Quality Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📋 Analysis Results" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Code Analysis | ${{ needs.code-analysis.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Security Scan | ${{ needs.security-scan.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Static Analysis | ${{ needs.static-analysis.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| License Check | ${{ needs.license-check.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🎯 Recommendations" >> $GITHUB_STEP_SUMMARY
          echo "- Review any failed checks above" >> $GITHUB_STEP_SUMMARY
          echo "- Check uploaded artifacts for detailed reports" >> $GITHUB_STEP_SUMMARY
          echo "- Monitor security vulnerabilities regularly" >> $GITHUB_STEP_SUMMARY

      - name: 🔔 Quality Alert (if failures)
        if: needs.code-analysis.result == 'failure' || needs.security-scan.result == 'failure'
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: failure
          title: "⚠️ ChunkDiscovery Quality Check Failed"
          description: |
            Some quality checks have failed. Please review:
            - Code Analysis: ${{ needs.code-analysis.result }}
            - Security Scan: ${{ needs.security-scan.result }}
            - Static Analysis: ${{ needs.static-analysis.result }}
          color: 0xff6b00