name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

env:
  GRADLE_OPTS: '-Dorg.gradle.daemon=false'

jobs:
  test-and-build:
    name: 🧪 Test & Build
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 📦 Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: 🧪 Run Tests
        run: ./gradlew test

      - name: 📊 Generate Test Coverage
        run: ./gradlew jacocoTestReport

      - name: 🏗️ Build Plugin
        run: ./gradlew build shadowJar

      - name: 📋 Generate Build Info
        run: |
          VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "## 🏗️ Build Information" > build-info.md
          echo "- **Version:** $VERSION" >> build-info.md
          echo "- **Build Date:** $(date -u)" >> build-info.md
          echo "- **Commit:** ${{ github.sha }}" >> build-info.md

      - name: 📦 Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ChunkDiscovery-${{ env.VERSION }}
          path: |
            build/libs/*-all.jar
            build-info.md
          retention-days: 90

      - name: 📊 Upload Test Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports
          path: |
            build/test-results/
            build/reports/tests/
            build/reports/jacoco/
          retention-days: 30

  release:
    name: 🚀 Release
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    permissions:
      contents: write
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 📦 Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: 📦 Download Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: ChunkDiscovery-*
          path: artifacts/
          merge-multiple: true

      - name: 📋 Get Version and Timestamp
        run: |
          VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')
          TIMESTAMP=$(date +"%Y%m%d-%H%M%S")
          RELEASE_TAG="v${VERSION}-${TIMESTAMP}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_ENV
          echo "Building release: $RELEASE_TAG"

      - name: 🔍 List Downloaded Files
        run: |
          echo "Downloaded artifacts:"
          find artifacts/ -name "*.jar" -type f || echo "No JAR files found"
          ls -la artifacts/ || echo "No artifacts directory"

      - name: 🏷️ Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          name: ChunkDiscovery ${{ env.VERSION }} (Build ${{ github.run_number }})
          body: |
            ## 🚀 ChunkDiscovery Release
            
            **Version:** ${{ env.VERSION }}  
            **Build:** #${{ github.run_number }}  
            **Commit:** ${{ github.sha }}  
            **Date:** $(date -u)
            
            ### 📦 Downloads
            - `chunk-discovery-plugin-${{ env.VERSION }}-all.jar` - Main plugin file
            
            ### 🔧 Installation
            1. Download the JAR file
            2. Place it in your server's `plugins/` directory
            3. Restart your server
          files: artifacts/*.jar
          draft: false
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}